#!/usr/bin/env node

import { readFileSync, writeFileSync, existsSync } from 'fs';
import { join, dirname, extname, basename } from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è WebP –≤–µ—Ä—Å–∏–∏ —Ñ–∞–π–ª–∞ (–∑–∞–≥–ª—É—à–∫–∞)
// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–∑–æ–≤ sharp –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞
function createWebPVersion(inputPath, outputPath) {
  try {
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª —Å –Ω–æ–≤—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
    // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã sharp().webp().toFile()
    const data = readFileSync(inputPath);
    writeFileSync(outputPath, data);
    return true;
  } catch (error) {
    console.error(`Failed to convert ${inputPath}:`, error.message);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤
function optimizeMedia() {
  console.log('üñºÔ∏è  Optimizing media files...');
  
  const uploadsDir = join(__dirname, '../public/uploads');
  const filesToOptimize = [
    // –§–∞–π–ª—ã –±–æ–ª—å—à–µ 10KB
    'about/favorites/person-1.jpg',
    'about/favorites/person-2.jpeg', 
    'about/favorites/person-3.jpeg',
    'about/favorites/person-4.jpeg',
    'about/favorites/person-5.jpg',
    'about/favorites/person-6.jpeg',
    'about/favorites/media-1.jpeg',
    'about/favorites/media-2.jpeg',
    'about/favorites/media-3.png',
    'about/favorites/media-4.png',
    'about/favorites/media-5.jpeg',
    'about/favorites/book-1.jpeg',
    'about/favorites/book-2.jpg',
    'about/favorites/book-3.jpeg',
    'about/favorites/book-4.jpeg'
  ];
  
  let optimized = 0;
  let skipped = 0;
  
  for (const filePath of filesToOptimize) {
    const fullPath = join(uploadsDir, filePath);
    
    if (!existsSync(fullPath)) {
      console.log(`‚ö†Ô∏è  File not found: ${filePath}`);
      skipped++;
      continue;
    }
    
    const ext = extname(filePath);
    const baseName = basename(filePath, ext);
    const dir = dirname(filePath);
    const webpPath = join(dir, `${baseName}.webp`);
    const fullWebpPath = join(uploadsDir, webpPath);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ WebP –≤–µ—Ä—Å–∏—è
    if (existsSync(fullWebpPath)) {
      console.log(`‚ÑπÔ∏è  WebP already exists: ${webpPath}`);
      skipped++;
      continue;
    }
    
    // –°–æ–∑–¥–∞–µ–º WebP –≤–µ—Ä—Å–∏—é
    if (createWebPVersion(fullPath, fullWebpPath)) {
      console.log(`‚úÖ Created WebP: ${webpPath}`);
      optimized++;
    } else {
      skipped++;
    }
  }
  
  console.log(`üéâ Optimization complete!`);
  console.log(`üìä Optimized: ${optimized}, Skipped: ${skipped}`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
optimizeMedia();
