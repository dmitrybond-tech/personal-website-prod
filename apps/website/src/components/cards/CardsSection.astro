---
import type { CardProps } from '../about/CardGridIsland';
import CardGridIsland from '../about/CardGridIsland';

export interface Props {
  title?: string;
  items: CardProps[];
  variant?: 'default' | 'skills';
  hydrate?: 'load' | 'visible';
}

const { title, items, variant = 'default', hydrate = 'load' } = Astro.props;

// Generate skeleton items (3-6 based on items length)
const skeletonCount = Math.min(Math.max(items.length, 3), 6);
---

<section class="cards-section space-y-4">
  {title && <h2 class="font-extrabold text-2xl text-gray-900 dark:text-gray-100">{title}</h2>}
  
  <!-- SSR skeleton -->
  <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4" aria-hidden="true">
    {Array.from({ length: skeletonCount }).map(() => (
      <div class="h-28 rounded-xl bg-gray-100 dark:bg-gray-800 animate-pulse" />
    ))}
  </div>
  
  <!-- Island -->
  <CardGridIsland
    client:{hydrate}
    items={items}
    variant={variant}
  />
</section>
