---
import { marked } from 'marked';

export interface Props {
  content: string;
  class?: string;
}

const { content, class: className } = Astro.props;

const minIndent = (str: string) => {
  const match = str.match(/^[\t ]*(?=\S)/gm);

  if (!match) return 0;

  return match.reduce((r, a) => Math.min(r, a.length), Number.POSITIVE_INFINITY);
};

const stripIndent = (str: string) => {
  const indent = minIndent(str);

  if (indent === 0) return str;

  const regex = new RegExp(`^[ \\t]{${indent}}`, 'gm');

  return str.replace(regex, '');
};

const parseMarkdown = (str: string) =>
  marked.parse(stripIndent(str), {
    breaks: true,
    headerIds: false,
    mangle: false,
  });
---

<div set:html={parseMarkdown(content)} class:list={['description', 'text-sm leading-relaxed font-normal text-gray-500 sm:text-base sm:leading-relaxed dark:text-gray-300', className]} />

<style is:global>
  @reference "../../../../styles/tailwind.css";
  
  .description ul {
    list-style-type: disc;
    padding-left: 1.25rem;
  }

  .description a {
    text-decoration: underline;
    opacity: 0.9;
  }
</style>