---
import type { Data } from '../types/data';
import SideNav from './SideNav.astro';
import MainSection from './sections/MainSection.astro';
import SkillsSection from './sections/SkillsSection.astro';
import ExperienceSection from './sections/ExperienceSection.astro';
import PortfolioSection from './sections/PortfolioSection.astro';
import EducationSection from './sections/EducationSection.astro';
import TestimonialsSection from './sections/TestimonialsSection.astro';
import FavoritesSection from './sections/FavoritesSection.astro';

export interface Props {
  locale: 'en' | 'ru';
  data: Data;
}

const { locale, data } = Astro.props;
const { config, sections } = data;
---

<section class="cv-root">
  <div class="cv-layout mx-auto max-w-[var(--cv-max-w)] px-[var(--cv-gap)]
              grid grid-cols-1 xl:grid-cols-[1fr_auto] gap-8
              overflow-visible">
    <main class="min-w-0 isolate">
      <div class="cv-sections flex flex-col gap-8 xl:gap-10 pt-1">
        <MainSection {...sections.main} />
        <SkillsSection {...sections.skills} />
        <ExperienceSection {...sections.experience} />
        <PortfolioSection {...sections.portfolio} />
        <EducationSection {...sections.education} />
        <TestimonialsSection {...sections.testimonials} />
        <FavoritesSection {...sections.favorites} />
      </div>
    </main>
    <aside class="hidden xl:block overflow-visible">
      <div id="sidebar"
           class="sticky top-[calc(var(--navbar-h)+16px)] self-start h-min w-[64px]">
        <SideNav sections={sections} />
      </div>
    </aside>
  </div>
</section>

<style>
  .cv-root {
    @apply flex justify-center xl:relative xl:left-7;
    background: var(--cv-page-bg);
    overflow: visible !important;
  }
  
  .cv-layout {
    overflow: visible !important;
  }
  
  .cv-main {
    @apply w-full max-w-5xl space-y-4 px-2 py-3 sm:space-y-6 sm:px-8 sm:py-12 lg:space-y-8 lg:py-20;
  }
  
  /* Ensure proper spacing for sticky navbar */
  .cv-main > * {
    scroll-margin-top: var(--navbar-h);
  }
</style>

<script>
  // Скрипт для активной секции (скопирован из DevsCard)
  import hashState from '../utils/hash-state.js';
  import throttle from '../utils/throttle.js';

  const sections = [...document.querySelectorAll('[data-type="section"]')];
  const sidebarItems = [...document.getElementById('sidebar')?.children || []] as HTMLAnchorElement[];

  const isInUpperView = (section: Element) => section.getBoundingClientRect().bottom >= window.innerHeight / 3;

  const setActiveItem = (hash: string) => {
    sidebarItems.forEach((item) => {
      if (item.href.endsWith(hash)) {
        item.setAttribute('aria-current', 'page');
      } else {
        item.removeAttribute('aria-current');
      }
    });
  };

  const updateHash = () => {
    const currentSection = sections.find(isInUpperView);
    if (currentSection) {
      hashState.updateHash(currentSection.id);
    }
  };

  // Инициализация
  setActiveItem(hashState.getHash());
  hashState.subscribe(setActiveItem);
  document.addEventListener('scroll', throttle(updateHash, 200));
</script>

<script>
  // Синхронизация высоты Navbar для sticky сайдбара
  const el = document.querySelector('header[data-app-navbar]');
  const set = () => {
    const h = (el && el.offsetHeight) || 72;
    document.documentElement.style.setProperty('--navbar-h', h + 'px');
  };
  set();
  new ResizeObserver(set).observe(el);
</script>
