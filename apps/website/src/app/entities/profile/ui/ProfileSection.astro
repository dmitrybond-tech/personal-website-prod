---
import { mainData } from '@content/en/main.ts';
import { mainData as ruMainData } from '@content/ru/main.ts';

interface Props {
  locale: 'en' | 'ru';
}

const { locale } = Astro.props;
const data = locale === 'ru' ? ruMainData : mainData;
---

<div class="profile-section">
  <div class="profile-card">
    <div class="profile-header">
      <div class="profile-image">
        <img 
          src={data.image} 
          alt={data.fullName}
          class="profile-photo"
        />
        <a href={data.action.url} class="download-btn" download={data.action.downloadedFileName}>
          {data.action.label}
        </a>
      </div>
      <div class="profile-info">
        <div class="profile-title">
          <h1 class="full-name">{data.fullName}</h1>
          <p class="role">{data.role}</p>
        </div>
        <div class="profile-links">
          {data.links.map((link) => (
            <a 
              href={link.url} 
              class="link-btn" 
              target="_blank" 
              rel="noopener noreferrer"
              style={`--color: ${link.color}`}
            >
              <i class={`fa ${link.icon}`}></i>
              <span>{link.label}</span>
            </a>
          ))}
        </div>
      </div>
    </div>
    
    <div class="profile-details">
      <div class="details-grid">
        {data.details.map((detail) => (
          <div class="detail-item">
            <span class="detail-label">{detail.label}:</span>
            {detail.url ? (
              <a href={detail.url} class="detail-value">{detail.value}</a>
            ) : (
              <span class="detail-value">{detail.value}</span>
            )}
          </div>
        ))}
      </div>
      
      <div class="profile-content">
        <p class="description">{data.description}</p>
        <div class="tags">
          {data.tags.map((tag) => (
            <span class="tag">{tag.name}</span>
          ))}
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .profile-section {
    max-width: 1200px;
    margin: 0 auto;
    padding: 24px;
  }

  .profile-card {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 16px;
    padding: 32px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .profile-header {
    display: flex;
    gap: 32px;
    align-items: flex-start;
    margin-bottom: 32px;
  }

  .profile-image {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 16px;
    flex-shrink: 0;
  }

  .profile-photo {
    width: 200px;
    height: 200px;
    border-radius: 12px;
    object-fit: cover;
    border: 2px solid rgba(0, 0, 0, 0.1);
  }

  .download-btn {
    background: #007bff;
    color: white;
    padding: 12px 24px;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    transition: background 0.2s;
  }

  .download-btn:hover {
    background: #0056b3;
  }

  .profile-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  .profile-title {
    margin-bottom: 16px;
  }

  .full-name {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0 0 8px 0;
    color: #1a1a1a;
  }

  .role {
    font-size: 1.25rem;
    color: #666;
    margin: 0;
  }

  .profile-links {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
  }

  .link-btn {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px 16px;
    background: rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    text-decoration: none;
    color: var(--color, #333);
    font-weight: 500;
    transition: all 0.2s;
  }

  .link-btn:hover {
    background: rgba(255, 255, 255, 1);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .profile-details {
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  .details-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 16px;
  }

  .detail-item {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .detail-label {
    font-weight: 600;
    color: #666;
    font-size: 0.9rem;
  }

  .detail-value {
    color: #333;
    font-weight: 500;
    text-decoration: none;
  }

  .detail-value:hover {
    color: #007bff;
  }

  .profile-content {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .description {
    font-size: 1.1rem;
    line-height: 1.6;
    color: #444;
    margin: 0;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .tag {
    background: rgba(0, 123, 255, 0.1);
    color: #007bff;
    padding: 6px 12px;
    border-radius: 16px;
    font-size: 0.9rem;
    font-weight: 500;
  }

  /* Dark theme */
  :global(.dark) .profile-card {
    background: rgba(30, 30, 30, 0.8);
    border-color: rgba(255, 255, 255, 0.1);
  }

  :global(.dark) .full-name {
    color: #ffffff;
  }

  :global(.dark) .role {
    color: #ccc;
  }

  :global(.dark) .link-btn {
    background: rgba(40, 40, 40, 0.8);
    border-color: rgba(255, 255, 255, 0.1);
    color: #fff;
  }

  :global(.dark) .link-btn:hover {
    background: rgba(40, 40, 40, 1);
  }

  :global(.dark) .detail-label {
    color: #aaa;
  }

  :global(.dark) .detail-value {
    color: #fff;
  }

  :global(.dark) .description {
    color: #ddd;
  }

  @media (max-width: 768px) {
    .profile-header {
      flex-direction: column;
      align-items: center;
      text-align: center;
    }

    .profile-photo {
      width: 150px;
      height: 150px;
    }

    .full-name {
      font-size: 2rem;
    }

    .profile-links {
      justify-content: center;
    }

    .details-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
