---
import { getEntryBySlug } from 'astro:content';
import AppShell from '../../app/layouts/AppShell.astro';
import Footer from '../../app/widgets/footer/ui/Footer.astro';

// Validate locale parameter
const SUPPORTED_LOCALES = ['en', 'ru'] as const;
const { lang } = Astro.params;

if (!lang || !SUPPORTED_LOCALES.includes(lang as any)) {
  return Astro.redirect('/en/about');
}

const locale = lang as 'en' | 'ru';

// Load About content using getEntryBySlug
const entry = await getEntryBySlug('aboutPage', 'about', { locale });

if (!entry) {
  // Render placeholder section instead of 404
  console.warn(`About page content not found for locale: ${locale}. Rendering placeholder.`);
}

// Render content when available
const { Content } = entry ? await entry.render() : { Content: null };
---

<AppShell variant="about">
  <main class="mx-auto max-w-[var(--cv-content-max-w)] px-4 xl:relative xl:left-7">
    {entry ? (
      <div class="prose prose-lg max-w-none">
        <h1>{entry.data.title}</h1>
        {entry.data.profile && (
          <div class="mb-6">
            <h2 class="text-xl font-semibold text-gray-800 dark:text-gray-200">
              {entry.data.profile.fullName}
            </h2>
            <p class="text-lg text-gray-600 dark:text-gray-400">
              {entry.data.profile.title}
            </p>
            {entry.data.profile.avatar && (
              <img 
                src={entry.data.profile.avatar} 
                alt={entry.data.profile.fullName}
                class="w-32 h-32 rounded-full object-cover mt-4"
              />
            )}
          </div>
        )}
        {entry.data.sections && entry.data.sections.length > 0 && (
          <div class="mt-8 space-y-6">
            {entry.data.sections.map((section, index) => (
              <div key={index} class="border-l-4 border-blue-500 pl-4">
                <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-200 flex items-center gap-2">
                  {section.icon && (
                    <i class={`${section.icon} text-blue-500`}></i>
                  )}
                  {section.heading}
                </h3>
                <div class="mt-2 text-gray-700 dark:text-gray-300">
                  {section.body}
                </div>
                {section.image && (
                  <img 
                    src={section.image} 
                    alt={section.heading}
                    class="mt-3 w-full max-w-md rounded-lg"
                  />
                )}
              </div>
            ))}
          </div>
        )}
        {entry.data.links && entry.data.links.length > 0 && (
          <div class="mt-8">
            <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-3">Links</h3>
            <div class="flex flex-wrap gap-2">
              {entry.data.links.map((link, index) => (
                <a 
                  href={link} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="inline-block px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
                >
                  Link {index + 1}
                </a>
              ))}
            </div>
          </div>
        )}
        {entry.data.cv_pdf && (
          <div class="mt-8">
            <a 
              href={entry.data.cv_pdf} 
              target="_blank" 
              rel="noopener noreferrer"
              class="inline-block px-6 py-3 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors"
            >
              Download CV
            </a>
          </div>
        )}
        {entry.data.gallery && entry.data.gallery.length > 0 && (
          <div class="mt-8">
            <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-3">Gallery</h3>
            <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
              {entry.data.gallery.map((image, index) => (
                <img 
                  src={image} 
                  alt={`Gallery image ${index + 1}`}
                  class="w-full h-32 object-cover rounded-lg"
                />
              ))}
            </div>
          </div>
        )}
        <div class="mt-8">
          {Content && <Content />}
        </div>
      </div>
    ) : (
      <div class="prose prose-lg max-w-none">
        <h1>About Page</h1>
        <p>Content is being prepared. Please check back later.</p>
        <div class="mt-8 p-6 bg-gray-50 dark:bg-gray-800 rounded-lg">
          <h2>Placeholder Content</h2>
          <p>This is a placeholder for the about page content in {locale}.</p>
        </div>
      </div>
    )}
  </main>
</AppShell>

<style>
  html {
    scroll-behavior: smooth;
  }

  /* Ensure proper spacing for sticky navbar */
  body {
    margin: 0;
    padding: 0;
  }
</style>

<script>
  // Redirect from #bookme to /bookme page
  if (typeof window !== 'undefined' && location.hash === '#bookme') {
    location.replace(`/${locale}/bookme`);
  }
</script>

<Footer />
