---
import "../styles/main.css";
import { getLocaleFromPath, switchLocale } from '../app/shared/lib/locale';
import { getInitialTheme, applyTheme } from '@shared/lib/theme';
import ThemeToggle from '@app/features/theme-toggle/ui/ThemeToggle.astro';

interface Props {
  title?: string;
  description?: string;
  lang?: 'en' | 'ru';
  meta?: Record<string, string>;
  variant?: 'default' | 'bookme' | 'about';
  pageClass?: string;
}

const { 
  lang = 'en', 
  title = '', 
  description = '', 
  meta = {},
  variant = 'default',
  pageClass = ''
} = Astro.props as Props;

const url = Astro.url;
const locale = getLocaleFromPath(url.pathname);
const site = 'https://example.com'; // TODO: заменить на реальный домен
const altEn = switchLocale(url, 'en');
const altRu = switchLocale(url, 'ru');
const canonical = locale === 'en' ? `${site}${altEn}` : `${site}${altRu}`;

// Авто-детект page type по пути
const isBookme = variant === 'bookme' || url.pathname.includes('/bookme');
const isAbout = variant === 'about' || url.pathname.includes('/about');

// Build body classes
const bodyClasses = [
  'min-h-screen antialiased',
  isBookme ? 'page-bookme' : '',
  isAbout ? 'page-about' : '',
  pageClass
].filter(Boolean).join(' ');
---

<!DOCTYPE html>
<html lang={Astro.url.pathname.startsWith('/ru') ? 'ru' : 'en'}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    {description && <meta name="description" content={description} />}
    <meta name="theme-color" content="#ffffff" />
    
    <!-- No-FOUC theme initialization -->
    <script is:inline>
      (function () {
        try {
          var ls = localStorage.getItem('theme');
          var prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
          var theme = (ls === 'light' || ls === 'dark') ? ls : (prefersDark ? 'dark' : 'light');
          var root = document.documentElement;
          if (theme === 'dark') root.classList.add('dark');
          root.setAttribute('data-theme', theme);
        } catch {}
      })();
    </script>

    <!-- Canonical and alternate links -->
    <link rel="canonical" href={canonical} />
    <link rel="alternate" hrefLang="en" href={`${site}${altEn}`} />
    <link rel="alternate" hrefLang="ru" href={`${site}${altRu}`} />
    <link rel="alternate" hrefLang="x-default" href={`${site}${altEn}`} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonical} />
    <meta property="og:title" content={title} />
    {description && <meta property="og:description" content={description} />}

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonical} />
    <meta property="twitter:title" content={title} />
    {description && <meta property="twitter:description" content={description} />}

    <!-- Custom meta tags -->
    {Object.entries(meta).map(([key, value]) => (
      <meta name={key} content={value} />
    ))}

    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  </head>
  <body class={bodyClasses}>
    <slot />
    
    <ThemeToggle client:load />
    
    <!-- Script for locale switching -->
    <script is:inline>
      document.addEventListener('click', function(e) {
        var a = e.target && e.target.closest ? e.target.closest('a[data-locale]') : null;
        if (a) {
          var loc = a.getAttribute('data-locale');
          if (loc === 'en' || loc === 'ru') {
            document.cookie = 'locale=' + loc + '; Max-Age=31536000; Path=/; SameSite=Lax';
          }
        }
      });
    </script>
  </body>
</html>

